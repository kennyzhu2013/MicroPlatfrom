package main

// import "C"
import (
	// "github.com/kennyzhu/go-os/dbservice/subscriber"

	conf2 "github.com/kennyzhu/go-os/src/dbservice/conf"
	handler2 "github.com/kennyzhu/go-os/src/dbservice/handler"
	models2 "github.com/kennyzhu/go-os/src/dbservice/models"
	log2 "github.com/kennyzhu/go-os/src/log"
	"github.com/micro/go-micro"

	"github.com/kennyzhu/go-os/plugins/etcdv3"
	_ "github.com/kennyzhu/go-os/src/dbservicevice/conf"
)

// generated by: micro new --type srv --alias dbservice github.com/kennyzhu/go-os/
func main() {
	// New Service
	service := micro.NewService(
		micro.Name(conf2.AppConf.SrvName),
		micro.Version("1"),

		// for test registry..
		micro.Registry(etcdv3.NewRegistry()),
	)

	// Initialise service
	service.Init()

	// Initialise models
	models2.Init(false, "")

	// Register Handler,each goroutine..
	handler2.Init( service.Server() )

	// Register Struct as Subscriber
	// micro.RegisterSubscriber("go.micro.srv.template", service.Server(), new(subscriber.Example))
	// micro.RegisterSubscriber("go.micro.srv.template", service.Server(), subscriber.Handler)

	// Run service
	if err := service.Run(); err != nil {
		log2.Fatal(err)
	}
}
