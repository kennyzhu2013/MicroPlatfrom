// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter/t_gradehistory.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TGradehistory struct {
	Recordseq            string               `protobuf:"bytes,1,opt,name=recordseq,proto3" json:"recordseq,omitempty"`
	Msisdn               string               `protobuf:"bytes,2,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Usergrade            string               `protobuf:"bytes,3,opt,name=usergrade,proto3" json:"usergrade,omitempty"`
	Vipstatus            string               `protobuf:"bytes,4,opt,name=vipstatus,proto3" json:"vipstatus,omitempty"`
	Viptype              string               `protobuf:"bytes,5,opt,name=viptype,proto3" json:"viptype,omitempty"`
	Vipstartdate         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=vipstartdate,proto3" json:"vipstartdate,omitempty"`
	Vipenddate           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=vipenddate,proto3" json:"vipenddate,omitempty"`
	GradeDesc            string               `protobuf:"bytes,8,opt,name=grade_desc,json=gradeDesc,proto3" json:"grade_desc,omitempty"`
	Inserttime           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=inserttime,proto3" json:"inserttime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TGradehistory) Reset()         { *m = TGradehistory{} }
func (m *TGradehistory) String() string { return proto.CompactTextString(m) }
func (*TGradehistory) ProtoMessage()    {}
func (*TGradehistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_t_gradehistory_774e1a10a9006f5d, []int{0}
}
func (m *TGradehistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TGradehistory.Unmarshal(m, b)
}
func (m *TGradehistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TGradehistory.Marshal(b, m, deterministic)
}
func (dst *TGradehistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TGradehistory.Merge(dst, src)
}
func (m *TGradehistory) XXX_Size() int {
	return xxx_messageInfo_TGradehistory.Size(m)
}
func (m *TGradehistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TGradehistory.DiscardUnknown(m)
}

var xxx_messageInfo_TGradehistory proto.InternalMessageInfo

func (m *TGradehistory) GetRecordseq() string {
	if m != nil {
		return m.Recordseq
	}
	return ""
}

func (m *TGradehistory) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *TGradehistory) GetUsergrade() string {
	if m != nil {
		return m.Usergrade
	}
	return ""
}

func (m *TGradehistory) GetVipstatus() string {
	if m != nil {
		return m.Vipstatus
	}
	return ""
}

func (m *TGradehistory) GetViptype() string {
	if m != nil {
		return m.Viptype
	}
	return ""
}

func (m *TGradehistory) GetVipstartdate() *timestamp.Timestamp {
	if m != nil {
		return m.Vipstartdate
	}
	return nil
}

func (m *TGradehistory) GetVipenddate() *timestamp.Timestamp {
	if m != nil {
		return m.Vipenddate
	}
	return nil
}

func (m *TGradehistory) GetGradeDesc() string {
	if m != nil {
		return m.GradeDesc
	}
	return ""
}

func (m *TGradehistory) GetInserttime() *timestamp.Timestamp {
	if m != nil {
		return m.Inserttime
	}
	return nil
}

func init() {
	proto.RegisterType((*TGradehistory)(nil), "usercenter.TGradehistory")
}

func init() {
	proto.RegisterFile("usercenter/t_gradehistory.proto", fileDescriptor_t_gradehistory_774e1a10a9006f5d)
}

var fileDescriptor_t_gradehistory_774e1a10a9006f5d = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0xd5, 0x02, 0x69, 0x73, 0xc0, 0xe2, 0x01, 0x59, 0x15, 0x88, 0x8a, 0xa9, 0x53, 0x22,
	0xc1, 0x06, 0x12, 0x03, 0x42, 0x62, 0xaf, 0x3a, 0xb1, 0x54, 0x49, 0x7c, 0xb8, 0x96, 0x92, 0xd8,
	0xf8, 0x2e, 0x91, 0xfa, 0xb7, 0xf9, 0x05, 0x28, 0x0e, 0x69, 0xca, 0xd4, 0x2d, 0xf7, 0xde, 0xf7,
	0x2e, 0xef, 0x0c, 0xf7, 0x0d, 0xa1, 0x2f, 0xb0, 0x66, 0xf4, 0x29, 0x6f, 0xb5, 0xcf, 0x14, 0xee,
	0x0c, 0xb1, 0xf5, 0xfb, 0xc4, 0x79, 0xcb, 0x56, 0xc0, 0x08, 0x2c, 0x5e, 0xb4, 0xe1, 0x5d, 0x93,
	0x27, 0x85, 0xad, 0x52, 0x6d, 0xcb, 0xac, 0xd6, 0x69, 0x80, 0xf2, 0xe6, 0x2b, 0x75, 0xbc, 0x77,
	0x48, 0x29, 0x9b, 0x0a, 0x89, 0xb3, 0xca, 0x8d, 0x5f, 0xfd, 0xa2, 0x87, 0x9f, 0x29, 0x5c, 0x6f,
	0x3e, 0x8e, 0x7e, 0x20, 0x6e, 0x21, 0xf6, 0x58, 0x58, 0xaf, 0x08, 0xbf, 0xe5, 0x64, 0x39, 0x59,
	0xc5, 0xeb, 0x51, 0x10, 0x37, 0x10, 0x55, 0x64, 0x48, 0xd5, 0x72, 0x1a, 0xac, 0xbf, 0xa9, 0x4b,
	0x75, 0x95, 0x42, 0x55, 0x79, 0xd6, 0xa7, 0x0e, 0x42, 0xe7, 0xb6, 0xc6, 0x11, 0x67, 0xdc, 0x90,
	0x3c, 0xef, 0xdd, 0x83, 0x20, 0x24, 0xcc, 0x5a, 0x13, 0x9a, 0xca, 0x8b, 0xe0, 0x0d, 0xa3, 0x78,
	0x85, 0xab, 0x1e, 0xf3, 0xac, 0x32, 0x46, 0x19, 0x2d, 0x27, 0xab, 0xcb, 0xc7, 0x45, 0xa2, 0xad,
	0xd5, 0x25, 0x26, 0xc3, 0x99, 0xc9, 0x66, 0xb8, 0x6a, 0xfd, 0x8f, 0x17, 0xcf, 0x00, 0xad, 0x71,
	0x58, 0xab, 0x90, 0x9e, 0x9d, 0x4c, 0x1f, 0xd1, 0xe2, 0x0e, 0x20, 0x94, 0xdf, 0x2a, 0xa4, 0x42,
	0xce, 0xfb, 0xd2, 0x41, 0x79, 0x47, 0x2a, 0xba, 0xd5, 0xa6, 0x26, 0xf4, 0xdc, 0xbd, 0xa8, 0x8c,
	0x4f, 0xaf, 0x1e, 0xe9, 0xb7, 0xf9, 0x67, 0x54, 0x59, 0x85, 0x25, 0xe5, 0x51, 0x20, 0x9f, 0x7e,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x51, 0x5c, 0xcd, 0xf1, 0x01, 0x00, 0x00,
}
