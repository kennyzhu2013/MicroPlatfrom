// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter/t_task.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TTask struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Requrl               string               `protobuf:"bytes,2,opt,name=requrl,proto3" json:"requrl,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Status               string               `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Excutedate           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=excutedate,proto3" json:"excutedate,omitempty"`
	Createdate           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createdate,proto3" json:"createdate,omitempty"`
	Retrycount           string               `protobuf:"bytes,7,opt,name=retrycount,proto3" json:"retrycount,omitempty"`
	Priority             string               `protobuf:"bytes,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Reqbody              string               `protobuf:"bytes,9,opt,name=reqbody,proto3" json:"reqbody,omitempty"`
	Lupddate             *timestamp.Timestamp `protobuf:"bytes,10,opt,name=lupddate,proto3" json:"lupddate,omitempty"`
	Lastresult           string               `protobuf:"bytes,11,opt,name=lastresult,proto3" json:"lastresult,omitempty"`
	Callid               string               `protobuf:"bytes,12,opt,name=callid,proto3" json:"callid,omitempty"`
	Localpath            string               `protobuf:"bytes,13,opt,name=localpath,proto3" json:"localpath,omitempty"`
	Contenttype          string               `protobuf:"bytes,14,opt,name=contenttype,proto3" json:"contenttype,omitempty"`
	Timeout              string               `protobuf:"bytes,15,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Rspcontent           string               `protobuf:"bytes,16,opt,name=rspcontent,proto3" json:"rspcontent,omitempty"`
	Taskdesc             string               `protobuf:"bytes,17,opt,name=taskdesc,proto3" json:"taskdesc,omitempty"`
	Ssl                  string               `protobuf:"bytes,18,opt,name=ssl,proto3" json:"ssl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TTask) Reset()         { *m = TTask{} }
func (m *TTask) String() string { return proto.CompactTextString(m) }
func (*TTask) ProtoMessage()    {}
func (*TTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_t_task_d0156b2eeee1afb4, []int{0}
}
func (m *TTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TTask.Unmarshal(m, b)
}
func (m *TTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TTask.Marshal(b, m, deterministic)
}
func (dst *TTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TTask.Merge(dst, src)
}
func (m *TTask) XXX_Size() int {
	return xxx_messageInfo_TTask.Size(m)
}
func (m *TTask) XXX_DiscardUnknown() {
	xxx_messageInfo_TTask.DiscardUnknown(m)
}

var xxx_messageInfo_TTask proto.InternalMessageInfo

func (m *TTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TTask) GetRequrl() string {
	if m != nil {
		return m.Requrl
	}
	return ""
}

func (m *TTask) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TTask) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TTask) GetExcutedate() *timestamp.Timestamp {
	if m != nil {
		return m.Excutedate
	}
	return nil
}

func (m *TTask) GetCreatedate() *timestamp.Timestamp {
	if m != nil {
		return m.Createdate
	}
	return nil
}

func (m *TTask) GetRetrycount() string {
	if m != nil {
		return m.Retrycount
	}
	return ""
}

func (m *TTask) GetPriority() string {
	if m != nil {
		return m.Priority
	}
	return ""
}

func (m *TTask) GetReqbody() string {
	if m != nil {
		return m.Reqbody
	}
	return ""
}

func (m *TTask) GetLupddate() *timestamp.Timestamp {
	if m != nil {
		return m.Lupddate
	}
	return nil
}

func (m *TTask) GetLastresult() string {
	if m != nil {
		return m.Lastresult
	}
	return ""
}

func (m *TTask) GetCallid() string {
	if m != nil {
		return m.Callid
	}
	return ""
}

func (m *TTask) GetLocalpath() string {
	if m != nil {
		return m.Localpath
	}
	return ""
}

func (m *TTask) GetContenttype() string {
	if m != nil {
		return m.Contenttype
	}
	return ""
}

func (m *TTask) GetTimeout() string {
	if m != nil {
		return m.Timeout
	}
	return ""
}

func (m *TTask) GetRspcontent() string {
	if m != nil {
		return m.Rspcontent
	}
	return ""
}

func (m *TTask) GetTaskdesc() string {
	if m != nil {
		return m.Taskdesc
	}
	return ""
}

func (m *TTask) GetSsl() string {
	if m != nil {
		return m.Ssl
	}
	return ""
}

func init() {
	proto.RegisterType((*TTask)(nil), "usercenter.TTask")
}

func init() { proto.RegisterFile("usercenter/t_task.proto", fileDescriptor_t_task_d0156b2eeee1afb4) }

var fileDescriptor_t_task_d0156b2eeee1afb4 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x56, 0xd2, 0x34, 0x4d, 0x26, 0x50, 0x8a, 0x0f, 0x30, 0x8a, 0x10, 0x8a, 0x38, 0xf5, 0xb4,
	0x2b, 0x81, 0xc4, 0x01, 0x6e, 0x3c, 0x42, 0x95, 0x13, 0x17, 0xe4, 0xd8, 0xc3, 0x76, 0x55, 0xef,
	0xda, 0xb5, 0xc7, 0x12, 0xfb, 0x78, 0xbc, 0x59, 0x65, 0x7b, 0x37, 0x9b, 0x5b, 0x6f, 0xf3, 0xfd,
	0x8c, 0xf5, 0xf9, 0xb3, 0xe1, 0x63, 0x0c, 0xe4, 0x15, 0xf5, 0x4c, 0xbe, 0xe6, 0x3f, 0x2c, 0xc3,
	0x53, 0xe5, 0xbc, 0x65, 0x2b, 0x60, 0x16, 0xf6, 0x3f, 0x9b, 0x96, 0x1f, 0xe3, 0xa9, 0x52, 0xb6,
	0xab, 0x1b, 0x6b, 0x64, 0xdf, 0xd4, 0xd9, 0x74, 0x8a, 0x7f, 0x6b, 0xc7, 0x83, 0xa3, 0x50, 0x73,
	0xdb, 0x51, 0x60, 0xd9, 0xb9, 0x79, 0x2a, 0x07, 0x7d, 0xf9, 0xbf, 0x82, 0xeb, 0xe3, 0x51, 0x86,
	0x27, 0x71, 0x0b, 0xcb, 0x56, 0xe3, 0xe2, 0xb0, 0xb8, 0xdf, 0x3e, 0x2c, 0x5b, 0x2d, 0x3e, 0xc0,
	0xda, 0xd3, 0x73, 0xf4, 0x06, 0x97, 0x99, 0x1b, 0x91, 0x10, 0xb0, 0x4a, 0x87, 0xe2, 0x55, 0x66,
	0xf3, 0x9c, 0xbc, 0x81, 0x25, 0xc7, 0x80, 0xab, 0xe2, 0x2d, 0x48, 0xfc, 0x00, 0xa0, 0x7f, 0x2a,
	0x32, 0x69, 0xc9, 0x84, 0xd7, 0x87, 0xc5, 0xfd, 0xee, 0xeb, 0xbe, 0x6a, 0xac, 0x6d, 0x0c, 0x55,
	0x53, 0xc8, 0xea, 0x38, 0x65, 0x7a, 0xb8, 0x70, 0xa7, 0x5d, 0xe5, 0x49, 0x8e, 0xbb, 0xeb, 0xd7,
	0x77, 0x67, 0xb7, 0xf8, 0x0c, 0xe0, 0x89, 0xfd, 0xa0, 0x6c, 0xec, 0x19, 0x6f, 0x72, 0xa6, 0x0b,
	0x46, 0xec, 0x61, 0xe3, 0x7c, 0x6b, 0x7d, 0xcb, 0x03, 0x6e, 0xb2, 0x7a, 0xc6, 0x02, 0xe1, 0xc6,
	0xd3, 0xf3, 0xc9, 0xea, 0x01, 0xb7, 0x59, 0x9a, 0xa0, 0xf8, 0x0e, 0x1b, 0x13, 0x9d, 0xce, 0x79,
	0xe0, 0xd5, 0x3c, 0x67, 0x6f, 0x4a, 0x63, 0x64, 0x60, 0x4f, 0x21, 0x1a, 0xc6, 0x5d, 0x49, 0x33,
	0x33, 0xa9, 0x3d, 0x25, 0x8d, 0x69, 0x35, 0xbe, 0x29, 0xed, 0x15, 0x24, 0x3e, 0xc1, 0xd6, 0x58,
	0x25, 0x8d, 0x93, 0xfc, 0x88, 0x6f, 0xb3, 0x34, 0x13, 0xe2, 0x00, 0x3b, 0x65, 0x7b, 0xa6, 0x9e,
	0xf3, 0x73, 0xdc, 0x66, 0xfd, 0x92, 0x4a, 0x37, 0x49, 0xcf, 0x6d, 0x23, 0xe3, 0xbb, 0x72, 0x93,
	0x11, 0xe6, 0x7e, 0x82, 0x1b, 0xbd, 0x78, 0x37, 0xf6, 0x73, 0x66, 0x52, 0x3f, 0xe9, 0xb3, 0x69,
	0x0a, 0x0a, 0xdf, 0x97, 0x7e, 0x26, 0x2c, 0xee, 0xe0, 0x2a, 0x04, 0x83, 0x22, 0xd3, 0x69, 0xfc,
	0xb5, 0xf9, 0xbd, 0xee, 0xac, 0x26, 0x13, 0x4e, 0xeb, 0xdc, 0xc3, 0xb7, 0x97, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xdd, 0x89, 0x62, 0x32, 0xb8, 0x02, 0x00, 0x00,
}
