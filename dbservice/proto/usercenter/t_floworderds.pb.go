// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter/t_floworderds.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TFlowOrderDs struct {
	OrderId              string               `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	McoinExchangeId      string               `protobuf:"bytes,2,opt,name=mcoin_exchange_id,json=mcoinExchangeId,proto3" json:"mcoin_exchange_id,omitempty"`
	Mobile               string               `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	PartitionId          string               `protobuf:"bytes,4,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	ExchangeGoodId       string               `protobuf:"bytes,5,opt,name=exchange_good_id,json=exchangeGoodId,proto3" json:"exchange_good_id,omitempty"`
	ProductCode          string               `protobuf:"bytes,6,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	PlatId               string               `protobuf:"bytes,7,opt,name=plat_id,json=platId,proto3" json:"plat_id,omitempty"`
	CmdFlag              string               `protobuf:"bytes,8,opt,name=cmd_flag,json=cmdFlag,proto3" json:"cmd_flag,omitempty"`
	Timestamp            string               `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	FlxType              string               `protobuf:"bytes,10,opt,name=flx_type,json=flxType,proto3" json:"flx_type,omitempty"`
	Nonce                string               `protobuf:"bytes,11,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Signature            string               `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`
	Status               string               `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	RetCode              string               `protobuf:"bytes,14,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg               string               `protobuf:"bytes,15,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	ClientOrderId        string               `protobuf:"bytes,16,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	NotifyMsg            string               `protobuf:"bytes,17,opt,name=notify_msg,json=notifyMsg,proto3" json:"notify_msg,omitempty"`
	NotifyCode           string               `protobuf:"bytes,18,opt,name=notify_code,json=notifyCode,proto3" json:"notify_code,omitempty"`
	NotifyDate           *timestamp.Timestamp `protobuf:"bytes,19,opt,name=notify_date,json=notifyDate,proto3" json:"notify_date,omitempty"`
	CreateDate           *timestamp.Timestamp `protobuf:"bytes,20,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	LupdDate             *timestamp.Timestamp `protobuf:"bytes,21,opt,name=lupd_date,json=lupdDate,proto3" json:"lupd_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TFlowOrderDs) Reset()         { *m = TFlowOrderDs{} }
func (m *TFlowOrderDs) String() string { return proto.CompactTextString(m) }
func (*TFlowOrderDs) ProtoMessage()    {}
func (*TFlowOrderDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_t_floworderds_587164c2a651a4ee, []int{0}
}
func (m *TFlowOrderDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TFlowOrderDs.Unmarshal(m, b)
}
func (m *TFlowOrderDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TFlowOrderDs.Marshal(b, m, deterministic)
}
func (dst *TFlowOrderDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TFlowOrderDs.Merge(dst, src)
}
func (m *TFlowOrderDs) XXX_Size() int {
	return xxx_messageInfo_TFlowOrderDs.Size(m)
}
func (m *TFlowOrderDs) XXX_DiscardUnknown() {
	xxx_messageInfo_TFlowOrderDs.DiscardUnknown(m)
}

var xxx_messageInfo_TFlowOrderDs proto.InternalMessageInfo

func (m *TFlowOrderDs) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *TFlowOrderDs) GetMcoinExchangeId() string {
	if m != nil {
		return m.McoinExchangeId
	}
	return ""
}

func (m *TFlowOrderDs) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *TFlowOrderDs) GetPartitionId() string {
	if m != nil {
		return m.PartitionId
	}
	return ""
}

func (m *TFlowOrderDs) GetExchangeGoodId() string {
	if m != nil {
		return m.ExchangeGoodId
	}
	return ""
}

func (m *TFlowOrderDs) GetProductCode() string {
	if m != nil {
		return m.ProductCode
	}
	return ""
}

func (m *TFlowOrderDs) GetPlatId() string {
	if m != nil {
		return m.PlatId
	}
	return ""
}

func (m *TFlowOrderDs) GetCmdFlag() string {
	if m != nil {
		return m.CmdFlag
	}
	return ""
}

func (m *TFlowOrderDs) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *TFlowOrderDs) GetFlxType() string {
	if m != nil {
		return m.FlxType
	}
	return ""
}

func (m *TFlowOrderDs) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *TFlowOrderDs) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *TFlowOrderDs) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TFlowOrderDs) GetRetCode() string {
	if m != nil {
		return m.RetCode
	}
	return ""
}

func (m *TFlowOrderDs) GetRetMsg() string {
	if m != nil {
		return m.RetMsg
	}
	return ""
}

func (m *TFlowOrderDs) GetClientOrderId() string {
	if m != nil {
		return m.ClientOrderId
	}
	return ""
}

func (m *TFlowOrderDs) GetNotifyMsg() string {
	if m != nil {
		return m.NotifyMsg
	}
	return ""
}

func (m *TFlowOrderDs) GetNotifyCode() string {
	if m != nil {
		return m.NotifyCode
	}
	return ""
}

func (m *TFlowOrderDs) GetNotifyDate() *timestamp.Timestamp {
	if m != nil {
		return m.NotifyDate
	}
	return nil
}

func (m *TFlowOrderDs) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *TFlowOrderDs) GetLupdDate() *timestamp.Timestamp {
	if m != nil {
		return m.LupdDate
	}
	return nil
}

func init() {
	proto.RegisterType((*TFlowOrderDs)(nil), "usercenter.TFlowOrderDs")
}

func init() {
	proto.RegisterFile("usercenter/t_floworderds.proto", fileDescriptor_t_floworderds_587164c2a651a4ee)
}

var fileDescriptor_t_floworderds_587164c2a651a4ee = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcd, 0x6f, 0xd3, 0x30,
	0x14, 0x57, 0x81, 0x7e, 0xb9, 0xdd, 0xba, 0x99, 0x01, 0x66, 0xe2, 0x63, 0x70, 0x40, 0x15, 0x87,
	0x56, 0x82, 0x03, 0x87, 0xdd, 0x60, 0x0c, 0xe5, 0x80, 0x26, 0xa1, 0x9e, 0xb8, 0x44, 0xae, 0xfd,
	0xe2, 0x45, 0x72, 0xf2, 0x22, 0xfb, 0x45, 0x6b, 0xff, 0x60, 0xfe, 0x0f, 0x64, 0x3b, 0x4d, 0x8f,
	0xbb, 0xe5, 0xfd, 0xbe, 0xde, 0x87, 0xc3, 0xde, 0xb5, 0x1e, 0x9c, 0x82, 0x9a, 0xc0, 0xad, 0x29,
	0x2f, 0x2c, 0x3e, 0xa0, 0xd3, 0xe0, 0xb4, 0x5f, 0x35, 0x0e, 0x09, 0x39, 0x3b, 0xf2, 0x97, 0xd7,
	0xa6, 0xa4, 0xfb, 0x76, 0xbb, 0x52, 0x58, 0xad, 0x0d, 0x5a, 0x59, 0x9b, 0x75, 0x14, 0x6d, 0xdb,
	0x62, 0xdd, 0xd0, 0xbe, 0x01, 0xbf, 0xa6, 0xb2, 0x02, 0x4f, 0xb2, 0x6a, 0x8e, 0x5f, 0x29, 0xe8,
	0xe3, 0xbf, 0x21, 0x9b, 0x6f, 0x6e, 0x2d, 0x3e, 0xdc, 0x85, 0xfc, 0x1b, 0xcf, 0x5f, 0xb3, 0x49,
	0x6c, 0x95, 0x97, 0x5a, 0x0c, 0xae, 0x06, 0xcb, 0xe9, 0x9f, 0x71, 0xac, 0x33, 0xcd, 0x3f, 0xb3,
	0xf3, 0x4a, 0x61, 0x59, 0xe7, 0xb0, 0x53, 0xf7, 0xb2, 0x36, 0x10, 0x34, 0x4f, 0xa2, 0x66, 0x11,
	0x89, 0x9f, 0x1d, 0x9e, 0x69, 0xfe, 0x92, 0x8d, 0x2a, 0xdc, 0x96, 0x16, 0xc4, 0xd3, 0x28, 0xe8,
	0x2a, 0xfe, 0x81, 0xcd, 0x1b, 0xe9, 0xa8, 0xa4, 0x12, 0xeb, 0x60, 0x7f, 0x16, 0xd9, 0x59, 0x8f,
	0x65, 0x9a, 0x2f, 0xd9, 0x59, 0xdf, 0xc0, 0x20, 0xea, 0x20, 0x1b, 0x46, 0xd9, 0xe9, 0x01, 0xff,
	0x85, 0xa8, 0x33, 0x1d, 0xc3, 0x1c, 0xea, 0x56, 0x51, 0xae, 0x50, 0x83, 0x18, 0x75, 0x61, 0x09,
	0xfb, 0x81, 0x1a, 0xf8, 0x2b, 0x36, 0x6e, 0xac, 0xa4, 0x90, 0x31, 0x4e, 0x83, 0x84, 0x32, 0xd3,
	0x61, 0x4f, 0x55, 0xe9, 0xbc, 0xb0, 0xd2, 0x88, 0x49, 0xda, 0x53, 0x55, 0xfa, 0xd6, 0x4a, 0xc3,
	0xdf, 0xb0, 0x69, 0x7f, 0x26, 0x31, 0x8d, 0xdc, 0x11, 0x08, 0xc6, 0xc2, 0xee, 0xf2, 0x70, 0x58,
	0xc1, 0x92, 0xb1, 0xb0, 0xbb, 0xcd, 0xbe, 0x01, 0x7e, 0xc1, 0x86, 0x35, 0xd6, 0x0a, 0xc4, 0x2c,
	0xe2, 0xa9, 0x08, 0x71, 0xbe, 0x34, 0xb5, 0xa4, 0xd6, 0x81, 0x98, 0xa7, 0xb8, 0x1e, 0x08, 0x87,
	0xf2, 0x24, 0xa9, 0xf5, 0xe2, 0x24, 0xcd, 0x97, 0xaa, 0xd0, 0xc6, 0x41, 0xb7, 0xd7, 0x69, 0x6a,
	0xe3, 0xa0, 0xdf, 0x29, 0x50, 0x95, 0x37, 0x62, 0x91, 0x3c, 0x0e, 0xe8, 0xb7, 0x37, 0xfc, 0x13,
	0x5b, 0x28, 0x5b, 0x42, 0x4d, 0x79, 0xff, 0x84, 0x67, 0x51, 0x70, 0x92, 0xe0, 0xbb, 0xee, 0x21,
	0xdf, 0x32, 0x56, 0x23, 0x95, 0xc5, 0x3e, 0x66, 0x9c, 0xa7, 0x91, 0x12, 0x12, 0x62, 0xde, 0xb3,
	0x59, 0x47, 0xc7, 0xee, 0x3c, 0xf2, 0x9d, 0x23, 0x0e, 0x70, 0xdd, 0x0b, 0xb4, 0x24, 0x10, 0xcf,
	0xaf, 0x06, 0xcb, 0xd9, 0x97, 0xcb, 0x95, 0x41, 0x34, 0x16, 0x56, 0x87, 0x9f, 0x6f, 0xb5, 0x39,
	0xdc, 0xec, 0x60, 0xbe, 0x91, 0x14, 0xcd, 0xca, 0x81, 0x24, 0x48, 0xe6, 0x8b, 0xc7, 0xcd, 0x49,
	0x1e, 0xcd, 0xdf, 0xd8, 0xd4, 0xb6, 0x8d, 0x4e, 0xd6, 0x17, 0x8f, 0x5a, 0x27, 0x41, 0x1c, 0x8c,
	0xdf, 0x27, 0x7f, 0x47, 0x15, 0x6a, 0xb0, 0x7e, 0x3b, 0x8a, 0xba, 0xaf, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x33, 0x16, 0x22, 0x47, 0x63, 0x03, 0x00, 0x00,
}
