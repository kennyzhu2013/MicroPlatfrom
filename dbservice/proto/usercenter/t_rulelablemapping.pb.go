// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter/t_rulelablemapping.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TRuleLableMapping struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConditionId          string               `protobuf:"bytes,2,opt,name=condition_id,json=conditionId,proto3" json:"condition_id,omitempty"`
	LableId1             string               `protobuf:"bytes,3,opt,name=lable_id1,json=lableId1,proto3" json:"lable_id1,omitempty"`
	LableName1           string               `protobuf:"bytes,4,opt,name=lable_name1,json=lableName1,proto3" json:"lable_name1,omitempty"`
	LableId2             string               `protobuf:"bytes,5,opt,name=lable_id2,json=lableId2,proto3" json:"lable_id2,omitempty"`
	LableName2           string               `protobuf:"bytes,6,opt,name=lable_name2,json=lableName2,proto3" json:"lable_name2,omitempty"`
	LableId3             string               `protobuf:"bytes,7,opt,name=lable_id3,json=lableId3,proto3" json:"lable_id3,omitempty"`
	LableName3           string               `protobuf:"bytes,8,opt,name=lable_name3,json=lableName3,proto3" json:"lable_name3,omitempty"`
	LableId4             string               `protobuf:"bytes,9,opt,name=lable_id4,json=lableId4,proto3" json:"lable_id4,omitempty"`
	LableName4           string               `protobuf:"bytes,10,opt,name=lable_name4,json=lableName4,proto3" json:"lable_name4,omitempty"`
	CreateDate           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TRuleLableMapping) Reset()         { *m = TRuleLableMapping{} }
func (m *TRuleLableMapping) String() string { return proto.CompactTextString(m) }
func (*TRuleLableMapping) ProtoMessage()    {}
func (*TRuleLableMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_t_rulelablemapping_8a957796ca813f6a, []int{0}
}
func (m *TRuleLableMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TRuleLableMapping.Unmarshal(m, b)
}
func (m *TRuleLableMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TRuleLableMapping.Marshal(b, m, deterministic)
}
func (dst *TRuleLableMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TRuleLableMapping.Merge(dst, src)
}
func (m *TRuleLableMapping) XXX_Size() int {
	return xxx_messageInfo_TRuleLableMapping.Size(m)
}
func (m *TRuleLableMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_TRuleLableMapping.DiscardUnknown(m)
}

var xxx_messageInfo_TRuleLableMapping proto.InternalMessageInfo

func (m *TRuleLableMapping) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TRuleLableMapping) GetConditionId() string {
	if m != nil {
		return m.ConditionId
	}
	return ""
}

func (m *TRuleLableMapping) GetLableId1() string {
	if m != nil {
		return m.LableId1
	}
	return ""
}

func (m *TRuleLableMapping) GetLableName1() string {
	if m != nil {
		return m.LableName1
	}
	return ""
}

func (m *TRuleLableMapping) GetLableId2() string {
	if m != nil {
		return m.LableId2
	}
	return ""
}

func (m *TRuleLableMapping) GetLableName2() string {
	if m != nil {
		return m.LableName2
	}
	return ""
}

func (m *TRuleLableMapping) GetLableId3() string {
	if m != nil {
		return m.LableId3
	}
	return ""
}

func (m *TRuleLableMapping) GetLableName3() string {
	if m != nil {
		return m.LableName3
	}
	return ""
}

func (m *TRuleLableMapping) GetLableId4() string {
	if m != nil {
		return m.LableId4
	}
	return ""
}

func (m *TRuleLableMapping) GetLableName4() string {
	if m != nil {
		return m.LableName4
	}
	return ""
}

func (m *TRuleLableMapping) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func init() {
	proto.RegisterType((*TRuleLableMapping)(nil), "usercenter.TRuleLableMapping")
}

func init() {
	proto.RegisterFile("usercenter/t_rulelablemapping.proto", fileDescriptor_t_rulelablemapping_8a957796ca813f6a)
}

var fileDescriptor_t_rulelablemapping_8a957796ca813f6a = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd1, 0xbf, 0x4f, 0x83, 0x40,
	0x1c, 0x05, 0xf0, 0x14, 0xb5, 0xb6, 0x87, 0x31, 0xf1, 0xa6, 0x4b, 0x1d, 0xac, 0xba, 0x74, 0x82,
	0x14, 0xd8, 0xba, 0x19, 0x97, 0x26, 0xea, 0x40, 0x3a, 0xb9, 0x90, 0x83, 0xfb, 0x7a, 0x5e, 0x72,
	0xbf, 0x02, 0xc7, 0xe0, 0xdf, 0xee, 0x62, 0x7a, 0xa4, 0x96, 0x63, 0x23, 0xef, 0xbd, 0x0f, 0x47,
	0x38, 0xf4, 0xdc, 0x77, 0xd0, 0x36, 0xa0, 0x1d, 0xb4, 0xa9, 0xab, 0xda, 0x5e, 0x82, 0xa4, 0xb5,
	0x04, 0x45, 0xad, 0x15, 0x9a, 0x27, 0xb6, 0x35, 0xce, 0x60, 0x74, 0x1e, 0xad, 0x76, 0x5c, 0xb8,
	0xef, 0xbe, 0x4e, 0x1a, 0xa3, 0x52, 0x6e, 0x24, 0xd5, 0x3c, 0xf5, 0xa3, 0xba, 0xff, 0x4a, 0xad,
	0xfb, 0xb1, 0xd0, 0xa5, 0x4e, 0x28, 0xe8, 0x1c, 0x55, 0xf6, 0xfc, 0x34, 0xbc, 0xe8, 0xe9, 0x37,
	0x42, 0x77, 0x87, 0xb2, 0x97, 0xf0, 0x76, 0x3c, 0xe4, 0x7d, 0x38, 0x04, 0xdf, 0xa2, 0x48, 0x30,
	0x32, 0x5b, 0xcf, 0x36, 0xcb, 0x32, 0x12, 0x0c, 0x3f, 0xa2, 0x9b, 0xc6, 0x68, 0x26, 0x9c, 0x30,
	0xba, 0x12, 0x8c, 0x44, 0xbe, 0x89, 0xff, 0xb3, 0x3d, 0xc3, 0xf7, 0x68, 0xe9, 0xbf, 0xb3, 0x12,
	0x6c, 0x4b, 0x2e, 0x7c, 0xbf, 0xf0, 0xc1, 0x9e, 0x6d, 0xf1, 0x03, 0x8a, 0x87, 0x52, 0x53, 0x05,
	0x5b, 0x72, 0xe9, 0x6b, 0xe4, 0xa3, 0x8f, 0x63, 0x32, 0xd6, 0x19, 0xb9, 0x0a, 0x74, 0x16, 0xea,
	0x8c, 0xcc, 0x27, 0x3a, 0x1b, 0xeb, 0x9c, 0x5c, 0x07, 0x3a, 0x0f, 0x75, 0x4e, 0x16, 0x13, 0x9d,
	0x8f, 0x75, 0x41, 0x96, 0x81, 0x2e, 0x42, 0x5d, 0x10, 0x34, 0xd1, 0x05, 0xde, 0xa1, 0xb8, 0x69,
	0x81, 0x3a, 0xa8, 0x18, 0x75, 0x40, 0xe2, 0xf5, 0x6c, 0x13, 0x67, 0xab, 0x84, 0x1b, 0xc3, 0x25,
	0x24, 0xa7, 0x8b, 0x48, 0x0e, 0xa7, 0xff, 0x5e, 0xa2, 0x61, 0xfe, 0x4a, 0x1d, 0xbc, 0x2c, 0x3e,
	0xe7, 0xca, 0x30, 0x90, 0x5d, 0x3d, 0xf7, 0xcb, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x55, 0x53,
	0x39, 0xea, 0xfe, 0x01, 0x00, 0x00,
}
