// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter/t_rechargebatch.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TRechargeBatch struct {
	BatchId              string               `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	RechargeMoney        string               `protobuf:"bytes,2,opt,name=recharge_money,json=rechargeMoney,proto3" json:"recharge_money,omitempty"`
	PresentIntro         string               `protobuf:"bytes,3,opt,name=present_intro,json=presentIntro,proto3" json:"present_intro,omitempty"`
	ExpireTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Msisdn               string               `protobuf:"bytes,6,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	UserId               string               `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsBatch              string               `protobuf:"bytes,8,opt,name=is_batch,json=isBatch,proto3" json:"is_batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TRechargeBatch) Reset()         { *m = TRechargeBatch{} }
func (m *TRechargeBatch) String() string { return proto.CompactTextString(m) }
func (*TRechargeBatch) ProtoMessage()    {}
func (*TRechargeBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_t_rechargebatch_088139d90c0166dd, []int{0}
}
func (m *TRechargeBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TRechargeBatch.Unmarshal(m, b)
}
func (m *TRechargeBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TRechargeBatch.Marshal(b, m, deterministic)
}
func (dst *TRechargeBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TRechargeBatch.Merge(dst, src)
}
func (m *TRechargeBatch) XXX_Size() int {
	return xxx_messageInfo_TRechargeBatch.Size(m)
}
func (m *TRechargeBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_TRechargeBatch.DiscardUnknown(m)
}

var xxx_messageInfo_TRechargeBatch proto.InternalMessageInfo

func (m *TRechargeBatch) GetBatchId() string {
	if m != nil {
		return m.BatchId
	}
	return ""
}

func (m *TRechargeBatch) GetRechargeMoney() string {
	if m != nil {
		return m.RechargeMoney
	}
	return ""
}

func (m *TRechargeBatch) GetPresentIntro() string {
	if m != nil {
		return m.PresentIntro
	}
	return ""
}

func (m *TRechargeBatch) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *TRechargeBatch) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *TRechargeBatch) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *TRechargeBatch) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TRechargeBatch) GetIsBatch() string {
	if m != nil {
		return m.IsBatch
	}
	return ""
}

func init() {
	proto.RegisterType((*TRechargeBatch)(nil), "usercenter.TRechargeBatch")
}

func init() {
	proto.RegisterFile("usercenter/t_rechargebatch.proto", fileDescriptor_t_rechargebatch_088139d90c0166dd)
}

var fileDescriptor_t_rechargebatch_088139d90c0166dd = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x50, 0x3d, 0x4f, 0xc3, 0x30,
	0x14, 0x54, 0x0b, 0xa4, 0xc5, 0xa5, 0x1d, 0x3c, 0x80, 0xe9, 0x14, 0x81, 0x90, 0x3a, 0x25, 0x12,
	0x8c, 0xdd, 0xba, 0x65, 0x60, 0x89, 0x3a, 0xb1, 0x58, 0xf9, 0x78, 0x38, 0x96, 0xe2, 0x0f, 0xd9,
	0x2f, 0x12, 0xfd, 0x71, 0xfc, 0x37, 0x64, 0x27, 0x51, 0x47, 0xb6, 0xdc, 0xe5, 0xce, 0x77, 0xef,
	0x48, 0x3a, 0x78, 0x70, 0x0d, 0x68, 0x04, 0x97, 0x23, 0x77, 0xd0, 0x74, 0x95, 0x13, 0x50, 0x57,
	0xd8, 0x74, 0x99, 0x75, 0x06, 0x0d, 0x25, 0x57, 0xc5, 0xfe, 0x28, 0x24, 0x76, 0x43, 0x9d, 0x35,
	0x46, 0xe5, 0xc2, 0xf4, 0x95, 0x16, 0x79, 0x14, 0xd5, 0xc3, 0x77, 0x6e, 0xf1, 0x62, 0xc1, 0xe7,
	0x28, 0x15, 0x78, 0xac, 0x94, 0xbd, 0x7e, 0x8d, 0x0f, 0xbd, 0xfc, 0x2e, 0xc9, 0xee, 0x5c, 0x4e,
	0x09, 0xa7, 0x90, 0x40, 0x9f, 0xc9, 0x3a, 0x46, 0x71, 0xd9, 0xb2, 0x45, 0xba, 0x38, 0xdc, 0x97,
	0xab, 0x88, 0x8b, 0x96, 0xbe, 0x91, 0xdd, 0xdc, 0x86, 0x2b, 0xa3, 0xe1, 0xc2, 0x96, 0x51, 0xb0,
	0x9d, 0xd9, 0xcf, 0x40, 0xd2, 0x57, 0xb2, 0xb5, 0x0e, 0x3c, 0x68, 0xe4, 0x52, 0xa3, 0x33, 0xec,
	0x26, 0xaa, 0x1e, 0x26, 0xb2, 0x08, 0x1c, 0x3d, 0x92, 0x0d, 0xfc, 0x58, 0xe9, 0x80, 0x87, 0x4e,
	0xec, 0x36, 0x5d, 0x1c, 0x36, 0xef, 0xfb, 0x4c, 0x18, 0x23, 0x7a, 0xc8, 0xe6, 0x0b, 0xb2, 0xf3,
	0x5c, 0xb8, 0x24, 0xa3, 0x3c, 0x10, 0xc1, 0xdc, 0x38, 0xa8, 0x70, 0x32, 0xdf, 0xfd, 0x6f, 0x1e,
	0xe5, 0xd1, 0xfc, 0x48, 0x12, 0xe5, 0xa5, 0x6f, 0x35, 0x4b, 0x62, 0xaf, 0x09, 0xd1, 0x27, 0xb2,
	0x0a, 0xb3, 0x86, 0xbb, 0x57, 0xe3, 0x8f, 0x00, 0x8b, 0x36, 0x2c, 0x22, 0x3d, 0x8f, 0x23, 0xb0,
	0xf5, 0xb8, 0x88, 0xf4, 0x71, 0xac, 0xd3, 0xfa, 0x2b, 0x51, 0xa6, 0x85, 0xde, 0xd7, 0x49, 0x4c,
	0xfd, 0xf8, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x28, 0x29, 0x69, 0x34, 0xbd, 0x01, 0x00, 0x00,
}
